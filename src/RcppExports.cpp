// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/eSVD2.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// opt_x_cpp
NumericMatrix opt_x_cpp(MapMat X0, MapMat Y, SEXP B, SEXP Z, MapMat A, Environment family, MapVec s, MapVec gamma, MapVec offset, double l2pen, int verbose);
RcppExport SEXP _eSVD2_opt_x_cpp(SEXP X0SEXP, SEXP YSEXP, SEXP BSEXP, SEXP ZSEXP, SEXP ASEXP, SEXP familySEXP, SEXP sSEXP, SEXP gammaSEXP, SEXP offsetSEXP, SEXP l2penSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapMat >::type X0(X0SEXP);
    Rcpp::traits::input_parameter< MapMat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< MapMat >::type A(ASEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< MapVec >::type s(sSEXP);
    Rcpp::traits::input_parameter< MapVec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< MapVec >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(opt_x_cpp(X0, Y, B, Z, A, family, s, gamma, offset, l2pen, verbose));
    return rcpp_result_gen;
END_RCPP
}
// opt_yb_cpp
NumericMatrix opt_yb_cpp(MapMat YB0, MapMat XZ, MapMat A, Environment family, MapVec s, MapVec gamma, MapVec offset, double l2pen, int verbose);
RcppExport SEXP _eSVD2_opt_yb_cpp(SEXP YB0SEXP, SEXP XZSEXP, SEXP ASEXP, SEXP familySEXP, SEXP sSEXP, SEXP gammaSEXP, SEXP offsetSEXP, SEXP l2penSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapMat >::type YB0(YB0SEXP);
    Rcpp::traits::input_parameter< MapMat >::type XZ(XZSEXP);
    Rcpp::traits::input_parameter< MapMat >::type A(ASEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< MapVec >::type s(sSEXP);
    Rcpp::traits::input_parameter< MapVec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< MapVec >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(opt_yb_cpp(YB0, XZ, A, family, s, gamma, offset, l2pen, verbose));
    return rcpp_result_gen;
END_RCPP
}
// objfn_Xi_impl
double objfn_Xi_impl(MapVec Xi, MapMat Y, SEXP B, SEXP Zi, MapVec Ai, Environment family, double si, MapVec gamma, double offseti, double l2pen);
RcppExport SEXP _eSVD2_objfn_Xi_impl(SEXP XiSEXP, SEXP YSEXP, SEXP BSEXP, SEXP ZiSEXP, SEXP AiSEXP, SEXP familySEXP, SEXP siSEXP, SEXP gammaSEXP, SEXP offsetiSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< MapMat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi(ZiSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< double >::type si(siSEXP);
    Rcpp::traits::input_parameter< MapVec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type offseti(offsetiSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(objfn_Xi_impl(Xi, Y, B, Zi, Ai, family, si, gamma, offseti, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// objfn_Yj_impl
double objfn_Yj_impl(MapVec Yj, MapMat X, SEXP Bj, SEXP Z, MapVec Aj, Environment family, MapVec s, double gammaj, MapVec offset, double l2pen);
RcppExport SEXP _eSVD2_objfn_Yj_impl(SEXP YjSEXP, SEXP XSEXP, SEXP BjSEXP, SEXP ZSEXP, SEXP AjSEXP, SEXP familySEXP, SEXP sSEXP, SEXP gammajSEXP, SEXP offsetSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Yj(YjSEXP);
    Rcpp::traits::input_parameter< MapMat >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj(BjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Aj(AjSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< MapVec >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type gammaj(gammajSEXP);
    Rcpp::traits::input_parameter< MapVec >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(objfn_Yj_impl(Yj, X, Bj, Z, Aj, family, s, gammaj, offset, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// grad_Xi_impl
NumericVector grad_Xi_impl(MapVec Xi, MapMat Y, SEXP B, SEXP Zi, MapVec Ai, Environment family, double si, MapVec gamma, double offseti, double l2pen);
RcppExport SEXP _eSVD2_grad_Xi_impl(SEXP XiSEXP, SEXP YSEXP, SEXP BSEXP, SEXP ZiSEXP, SEXP AiSEXP, SEXP familySEXP, SEXP siSEXP, SEXP gammaSEXP, SEXP offsetiSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< MapMat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi(ZiSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< double >::type si(siSEXP);
    Rcpp::traits::input_parameter< MapVec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type offseti(offsetiSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_Xi_impl(Xi, Y, B, Zi, Ai, family, si, gamma, offseti, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// grad_Yj_impl
NumericVector grad_Yj_impl(MapVec Yj, MapMat X, SEXP Bj, SEXP Z, MapVec Aj, Environment family, MapVec s, double gammaj, MapVec offset, double l2pen);
RcppExport SEXP _eSVD2_grad_Yj_impl(SEXP YjSEXP, SEXP XSEXP, SEXP BjSEXP, SEXP ZSEXP, SEXP AjSEXP, SEXP familySEXP, SEXP sSEXP, SEXP gammajSEXP, SEXP offsetSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Yj(YjSEXP);
    Rcpp::traits::input_parameter< MapMat >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj(BjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Aj(AjSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< MapVec >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type gammaj(gammajSEXP);
    Rcpp::traits::input_parameter< MapVec >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_Yj_impl(Yj, X, Bj, Z, Aj, family, s, gammaj, offset, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// hessian_Xi_impl
NumericMatrix hessian_Xi_impl(MapVec Xi, MapMat Y, SEXP B, SEXP Zi, MapVec Ai, Environment family, double si, MapVec gamma, double offseti, double l2pen);
RcppExport SEXP _eSVD2_hessian_Xi_impl(SEXP XiSEXP, SEXP YSEXP, SEXP BSEXP, SEXP ZiSEXP, SEXP AiSEXP, SEXP familySEXP, SEXP siSEXP, SEXP gammaSEXP, SEXP offsetiSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< MapMat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi(ZiSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< double >::type si(siSEXP);
    Rcpp::traits::input_parameter< MapVec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type offseti(offsetiSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(hessian_Xi_impl(Xi, Y, B, Zi, Ai, family, si, gamma, offseti, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// hessian_Yj_impl
NumericMatrix hessian_Yj_impl(MapVec Yj, MapMat X, SEXP Bj, SEXP Z, MapVec Aj, Environment family, MapVec s, double gammaj, MapVec offset, double l2pen);
RcppExport SEXP _eSVD2_hessian_Yj_impl(SEXP YjSEXP, SEXP XSEXP, SEXP BjSEXP, SEXP ZSEXP, SEXP AjSEXP, SEXP familySEXP, SEXP sSEXP, SEXP gammajSEXP, SEXP offsetSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Yj(YjSEXP);
    Rcpp::traits::input_parameter< MapMat >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj(BjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Aj(AjSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< MapVec >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type gammaj(gammajSEXP);
    Rcpp::traits::input_parameter< MapVec >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(hessian_Yj_impl(Yj, X, Bj, Z, Aj, family, s, gammaj, offset, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// direction_Xi_impl
List direction_Xi_impl(MapVec Xi, MapMat Y, SEXP B, SEXP Zi, MapVec Ai, Environment family, double si, MapVec gamma, double offseti, double l2pen);
RcppExport SEXP _eSVD2_direction_Xi_impl(SEXP XiSEXP, SEXP YSEXP, SEXP BSEXP, SEXP ZiSEXP, SEXP AiSEXP, SEXP familySEXP, SEXP siSEXP, SEXP gammaSEXP, SEXP offsetiSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< MapMat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B(BSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi(ZiSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< double >::type si(siSEXP);
    Rcpp::traits::input_parameter< MapVec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type offseti(offsetiSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(direction_Xi_impl(Xi, Y, B, Zi, Ai, family, si, gamma, offseti, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// direction_Yj_impl
List direction_Yj_impl(MapVec Yj, MapMat X, SEXP Bj, SEXP Z, MapVec Aj, Environment family, MapVec s, double gammaj, MapVec offset, double l2pen);
RcppExport SEXP _eSVD2_direction_Yj_impl(SEXP YjSEXP, SEXP XSEXP, SEXP BjSEXP, SEXP ZSEXP, SEXP AjSEXP, SEXP familySEXP, SEXP sSEXP, SEXP gammajSEXP, SEXP offsetSEXP, SEXP l2penSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MapVec >::type Yj(YjSEXP);
    Rcpp::traits::input_parameter< MapMat >::type X(XSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj(BjSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< MapVec >::type Aj(AjSEXP);
    Rcpp::traits::input_parameter< Environment >::type family(familySEXP);
    Rcpp::traits::input_parameter< MapVec >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type gammaj(gammajSEXP);
    Rcpp::traits::input_parameter< MapVec >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< double >::type l2pen(l2penSEXP);
    rcpp_result_gen = Rcpp::wrap(direction_Yj_impl(Yj, X, Bj, Z, Aj, family, s, gammaj, offset, l2pen));
    return rcpp_result_gen;
END_RCPP
}
// distribution_neg_binom
SEXP distribution_neg_binom();
RcppExport SEXP _eSVD2_distribution_neg_binom() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(distribution_neg_binom());
    return rcpp_result_gen;
END_RCPP
}
// distribution_poisson
SEXP distribution_poisson();
RcppExport SEXP _eSVD2_distribution_poisson() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(distribution_poisson());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_eSVD2_opt_x_cpp", (DL_FUNC) &_eSVD2_opt_x_cpp, 11},
    {"_eSVD2_opt_yb_cpp", (DL_FUNC) &_eSVD2_opt_yb_cpp, 9},
    {"_eSVD2_objfn_Xi_impl", (DL_FUNC) &_eSVD2_objfn_Xi_impl, 10},
    {"_eSVD2_objfn_Yj_impl", (DL_FUNC) &_eSVD2_objfn_Yj_impl, 10},
    {"_eSVD2_grad_Xi_impl", (DL_FUNC) &_eSVD2_grad_Xi_impl, 10},
    {"_eSVD2_grad_Yj_impl", (DL_FUNC) &_eSVD2_grad_Yj_impl, 10},
    {"_eSVD2_hessian_Xi_impl", (DL_FUNC) &_eSVD2_hessian_Xi_impl, 10},
    {"_eSVD2_hessian_Yj_impl", (DL_FUNC) &_eSVD2_hessian_Yj_impl, 10},
    {"_eSVD2_direction_Xi_impl", (DL_FUNC) &_eSVD2_direction_Xi_impl, 10},
    {"_eSVD2_direction_Yj_impl", (DL_FUNC) &_eSVD2_direction_Yj_impl, 10},
    {"_eSVD2_distribution_neg_binom", (DL_FUNC) &_eSVD2_distribution_neg_binom, 0},
    {"_eSVD2_distribution_poisson", (DL_FUNC) &_eSVD2_distribution_poisson, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_eSVD2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
