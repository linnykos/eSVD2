// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// objfn_Xi_impl
double objfn_Xi_impl(NumericVector Xi_, NumericMatrix Y_, SEXP B_, SEXP Zi_, NumericVector Ai_, Environment family_, double si_, NumericVector gamma_);
RcppExport SEXP _eSVD2_objfn_Xi_impl(SEXP Xi_SEXP, SEXP Y_SEXP, SEXP B_SEXP, SEXP Zi_SEXP, SEXP Ai_SEXP, SEXP family_SEXP, SEXP si_SEXP, SEXP gamma_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Xi_(Xi_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_(Y_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type B_(B_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi_(Zi_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Ai_(Ai_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< double >::type si_(si_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma_(gamma_SEXP);
    rcpp_result_gen = Rcpp::wrap(objfn_Xi_impl(Xi_, Y_, B_, Zi_, Ai_, family_, si_, gamma_));
    return rcpp_result_gen;
END_RCPP
}
// objfn_Yj_impl
double objfn_Yj_impl(NumericVector Yj_, NumericMatrix X_, SEXP Bj_, SEXP Z_, NumericVector Aj_, Environment family_, NumericVector s_, double gammaj_);
RcppExport SEXP _eSVD2_objfn_Yj_impl(SEXP Yj_SEXP, SEXP X_SEXP, SEXP Bj_SEXP, SEXP Z_SEXP, SEXP Aj_SEXP, SEXP family_SEXP, SEXP s_SEXP, SEXP gammaj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yj_(Yj_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj_(Bj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_(Z_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Aj_(Aj_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_(s_SEXP);
    Rcpp::traits::input_parameter< double >::type gammaj_(gammaj_SEXP);
    rcpp_result_gen = Rcpp::wrap(objfn_Yj_impl(Yj_, X_, Bj_, Z_, Aj_, family_, s_, gammaj_));
    return rcpp_result_gen;
END_RCPP
}
// grad_Xi_impl
NumericVector grad_Xi_impl(NumericVector Xi_, NumericMatrix Y_, SEXP B_, SEXP Zi_, NumericVector Ai_, Environment family_, double si_, NumericVector gamma_);
RcppExport SEXP _eSVD2_grad_Xi_impl(SEXP Xi_SEXP, SEXP Y_SEXP, SEXP B_SEXP, SEXP Zi_SEXP, SEXP Ai_SEXP, SEXP family_SEXP, SEXP si_SEXP, SEXP gamma_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Xi_(Xi_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_(Y_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type B_(B_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi_(Zi_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Ai_(Ai_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< double >::type si_(si_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma_(gamma_SEXP);
    rcpp_result_gen = Rcpp::wrap(grad_Xi_impl(Xi_, Y_, B_, Zi_, Ai_, family_, si_, gamma_));
    return rcpp_result_gen;
END_RCPP
}
// grad_Yj_impl
NumericVector grad_Yj_impl(NumericVector Yj_, NumericMatrix X_, SEXP Bj_, SEXP Z_, NumericVector Aj_, Environment family_, NumericVector s_, double gammaj_);
RcppExport SEXP _eSVD2_grad_Yj_impl(SEXP Yj_SEXP, SEXP X_SEXP, SEXP Bj_SEXP, SEXP Z_SEXP, SEXP Aj_SEXP, SEXP family_SEXP, SEXP s_SEXP, SEXP gammaj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yj_(Yj_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj_(Bj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_(Z_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Aj_(Aj_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_(s_SEXP);
    Rcpp::traits::input_parameter< double >::type gammaj_(gammaj_SEXP);
    rcpp_result_gen = Rcpp::wrap(grad_Yj_impl(Yj_, X_, Bj_, Z_, Aj_, family_, s_, gammaj_));
    return rcpp_result_gen;
END_RCPP
}
// hessian_Xi_impl
NumericMatrix hessian_Xi_impl(NumericVector Xi_, NumericMatrix Y_, SEXP B_, SEXP Zi_, NumericVector Ai_, Environment family_, double si_, NumericVector gamma_);
RcppExport SEXP _eSVD2_hessian_Xi_impl(SEXP Xi_SEXP, SEXP Y_SEXP, SEXP B_SEXP, SEXP Zi_SEXP, SEXP Ai_SEXP, SEXP family_SEXP, SEXP si_SEXP, SEXP gamma_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Xi_(Xi_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_(Y_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type B_(B_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi_(Zi_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Ai_(Ai_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< double >::type si_(si_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma_(gamma_SEXP);
    rcpp_result_gen = Rcpp::wrap(hessian_Xi_impl(Xi_, Y_, B_, Zi_, Ai_, family_, si_, gamma_));
    return rcpp_result_gen;
END_RCPP
}
// hessian_Yj_impl
NumericMatrix hessian_Yj_impl(NumericVector Yj_, NumericMatrix X_, SEXP Bj_, SEXP Z_, NumericVector Aj_, Environment family_, NumericVector s_, double gammaj_);
RcppExport SEXP _eSVD2_hessian_Yj_impl(SEXP Yj_SEXP, SEXP X_SEXP, SEXP Bj_SEXP, SEXP Z_SEXP, SEXP Aj_SEXP, SEXP family_SEXP, SEXP s_SEXP, SEXP gammaj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yj_(Yj_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj_(Bj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_(Z_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Aj_(Aj_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_(s_SEXP);
    Rcpp::traits::input_parameter< double >::type gammaj_(gammaj_SEXP);
    rcpp_result_gen = Rcpp::wrap(hessian_Yj_impl(Yj_, X_, Bj_, Z_, Aj_, family_, s_, gammaj_));
    return rcpp_result_gen;
END_RCPP
}
// direction_Xi_impl
List direction_Xi_impl(NumericVector Xi_, NumericMatrix Y_, SEXP B_, SEXP Zi_, NumericVector Ai_, Environment family_, double si_, NumericVector gamma_);
RcppExport SEXP _eSVD2_direction_Xi_impl(SEXP Xi_SEXP, SEXP Y_SEXP, SEXP B_SEXP, SEXP Zi_SEXP, SEXP Ai_SEXP, SEXP family_SEXP, SEXP si_SEXP, SEXP gamma_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Xi_(Xi_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y_(Y_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type B_(B_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zi_(Zi_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Ai_(Ai_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< double >::type si_(si_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gamma_(gamma_SEXP);
    rcpp_result_gen = Rcpp::wrap(direction_Xi_impl(Xi_, Y_, B_, Zi_, Ai_, family_, si_, gamma_));
    return rcpp_result_gen;
END_RCPP
}
// direction_Yj_impl
List direction_Yj_impl(NumericVector Yj_, NumericMatrix X_, SEXP Bj_, SEXP Z_, NumericVector Aj_, Environment family_, NumericVector s_, double gammaj_);
RcppExport SEXP _eSVD2_direction_Yj_impl(SEXP Yj_SEXP, SEXP X_SEXP, SEXP Bj_SEXP, SEXP Z_SEXP, SEXP Aj_SEXP, SEXP family_SEXP, SEXP s_SEXP, SEXP gammaj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yj_(Yj_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X_(X_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Bj_(Bj_SEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_(Z_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Aj_(Aj_SEXP);
    Rcpp::traits::input_parameter< Environment >::type family_(family_SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s_(s_SEXP);
    Rcpp::traits::input_parameter< double >::type gammaj_(gammaj_SEXP);
    rcpp_result_gen = Rcpp::wrap(direction_Yj_impl(Yj_, X_, Bj_, Z_, Aj_, family_, s_, gammaj_));
    return rcpp_result_gen;
END_RCPP
}
// distribution_neg_binom
SEXP distribution_neg_binom();
RcppExport SEXP _eSVD2_distribution_neg_binom() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(distribution_neg_binom());
    return rcpp_result_gen;
END_RCPP
}
// distribution_poisson
SEXP distribution_poisson();
RcppExport SEXP _eSVD2_distribution_poisson() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(distribution_poisson());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_eSVD2_objfn_Xi_impl", (DL_FUNC) &_eSVD2_objfn_Xi_impl, 8},
    {"_eSVD2_objfn_Yj_impl", (DL_FUNC) &_eSVD2_objfn_Yj_impl, 8},
    {"_eSVD2_grad_Xi_impl", (DL_FUNC) &_eSVD2_grad_Xi_impl, 8},
    {"_eSVD2_grad_Yj_impl", (DL_FUNC) &_eSVD2_grad_Yj_impl, 8},
    {"_eSVD2_hessian_Xi_impl", (DL_FUNC) &_eSVD2_hessian_Xi_impl, 8},
    {"_eSVD2_hessian_Yj_impl", (DL_FUNC) &_eSVD2_hessian_Yj_impl, 8},
    {"_eSVD2_direction_Xi_impl", (DL_FUNC) &_eSVD2_direction_Xi_impl, 8},
    {"_eSVD2_direction_Yj_impl", (DL_FUNC) &_eSVD2_direction_Yj_impl, 8},
    {"_eSVD2_distribution_neg_binom", (DL_FUNC) &_eSVD2_distribution_neg_binom, 0},
    {"_eSVD2_distribution_poisson", (DL_FUNC) &_eSVD2_distribution_poisson, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_eSVD2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
